{"ast":null,"code":"var _jsxFileName = \"/Users/himanshipatel/Documents/react-trans/src/SpeechToText/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { ReactMic } from \"react-mic\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { FaMicrophoneAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition || window.speechSynthesis;\nlet mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = \"en-US\";\nmic.crossBrowser = true;\nconst SpeechToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [timerSeconds, setTimerSeconds] = React.useState(40);\n  const [recordedSeconds, setRecordedSeconds] = React.useState(40);\n  const [timerSecondsForprogress, setTimerSecondsForprogress] = React.useState(100);\n\n  // Audio recorder States\n  const [audioRecorder, setAudioRecorder] = React.useState(\"\");\n  const [statusAction, setActionStatus] = React.useState(\"Recording..\");\n\n  // Handle blob data\n  const [blobURL, setBlobURL] = React.useState(\"\");\n  const [recordedBlobData, setRecordedBlobData] = React.useState(\"\");\n  const userDetails = JSON.parse(localStorage.getItem(\"userInfo\"));\n  let [pauseArry, setPauseArry] = useState([]);\n  // For Handle timeOut alert modal\n  const [showAlert, setShowAlert] = React.useState(false);\n  const startRecording = () => {\n    mic.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join(\"\");\n      setTranscript(transcript);\n      console.log(transcript);\n    };\n    mic.start();\n  };\n  const stopRecording = () => {\n    mic.stop();\n  };\n  const onStop = async recordedBlob => {\n    let blob = await fetch(recordedBlob.blobURL).then(r => r.blob());\n    setRecordedBlobData(recordedBlob);\n    // var blobUrl = URL.createObjectURL(blob);\n\n    // var xhr = new XMLHttpRequest();\n    // xhr.responseType = \"blob\";\n\n    // xhr.onload = function () {\n    //   var recoveredBlob = xhr.response;\n\n    //   var reader = new FileReader();\n\n    //   reader.onload = function () {\n    //     var blobAsDataUrl = reader.result;\n    //   };\n\n    //   reader.readAsDataURL(recoveredBlob);\n    // };\n\n    // xhr.open(\"GET\", blobUrl);\n    // xhr.send();\n    setBlobURL(blob);\n    let startTime = recordedBlob.startTime;\n    let stopTime = recordedBlob.stopTime;\n    let dd = (stopTime - startTime) / 1000;\n    setLengthOfAudio(Math.round(dd));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: startRecording,\n      children: \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: stopRecording,\n      children: \"Stop Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-aloud-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-main-wrap\",\n        style: userDetails.type === \"custom\" ? {\n          height: \"180px\"\n        } : {\n          height: \"150px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Answer \", statusAction, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progrss-bar-mic-pm\",\n              children: [userDetails.type === \"custom\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mic-icon-main\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FaMicrophoneAlt, {\n                  className: \"mic-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                className: \"Progress-bar\",\n                now: audioRecorder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Recorded-Timer\",\n              children: [recordedSeconds > 9 ? recordedSeconds : \"0\" + recordedSeconds, \" \", \"Seconds Recorded.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactMic, {\n            record: record,\n            className: \"sound-wave\",\n            onStop: onStop,\n            onData: onData,\n            visualSetting: \"frequencyBars\",\n            mimeType: \"audio/ogg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), userDetails.type === \"custom\" && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"skip-btn\",\n            variant: \"primary\"\n            // onClick={() => handleAnswerAnalysis(\"Next\")}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), userDetails.type === \"custom\" && timerSecondsForprogress !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-pm\",\n        style: {\n          width: \"100%\",\n          background: \"white\",\n          height: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${timerSecondsForprogress}%`,\n            background: \"#049b40\",\n            height: \"5px\"\n          },\n          className: `${timerSecondsForprogress !== 100 && \"transintion-time\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Advertisements are a very powerful medium for any announcement or for any information that reaches the maximum number of people. Types of advertisements are classified and General. Classified advertisements are very much like notices, only the content different and no designs are allowed. It\\u2019s short and to the point. Advertisers only mention the main content, contact, address and telephone number to reach the customer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"V7gUu02Azar38oySiFgw/B1XCvo=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","ReactMic","Button","ProgressBar","FaMicrophoneAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","SpeechRecognition","window","webkitSpeechRecognition","speechSynthesis","mic","continuous","interimResults","lang","crossBrowser","SpeechToText","_s","transcript","setTranscript","timerSeconds","setTimerSeconds","recordedSeconds","setRecordedSeconds","timerSecondsForprogress","setTimerSecondsForprogress","audioRecorder","setAudioRecorder","statusAction","setActionStatus","blobURL","setBlobURL","recordedBlobData","setRecordedBlobData","userDetails","JSON","parse","localStorage","getItem","pauseArry","setPauseArry","showAlert","setShowAlert","startRecording","onresult","event","Array","from","results","map","result","join","console","log","start","stopRecording","stop","onStop","recordedBlob","blob","fetch","then","r","startTime","stopTime","dd","setLengthOfAudio","Math","round","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","type","height","now","record","onData","visualSetting","mimeType","variant","width","background","_c","$RefreshReg$"],"sources":["/Users/himanshipatel/Documents/react-trans/src/SpeechToText/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { ReactMic } from \"react-mic\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { FaMicrophoneAlt } from \"react-icons/fa\";\n\nlet SpeechRecognition =\n  window.SpeechRecognition ||\n  window.webkitSpeechRecognition ||\n  window.speechSynthesis;\n\nlet mic = new SpeechRecognition();\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = \"en-US\";\nmic.crossBrowser = true;\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState(\"\");\n  const [timerSeconds, setTimerSeconds] = React.useState(40);\n  const [recordedSeconds, setRecordedSeconds] = React.useState(40);\n  const [timerSecondsForprogress, setTimerSecondsForprogress] =\n    React.useState(100);\n\n  // Audio recorder States\n  const [audioRecorder, setAudioRecorder] = React.useState(\"\");\n  const [statusAction, setActionStatus] = React.useState(\"Recording..\");\n\n  // Handle blob data\n  const [blobURL, setBlobURL] = React.useState(\"\");\n  const [recordedBlobData, setRecordedBlobData] = React.useState(\"\");\n  const userDetails = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  let [pauseArry, setPauseArry] = useState([]);\n  // For Handle timeOut alert modal\n  const [showAlert, setShowAlert] = React.useState(false);\n\n  const startRecording = () => {\n    mic.onresult = (event) => {\n      const transcript = Array.from(event.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join(\"\");\n      setTranscript(transcript);\n      console.log(transcript);\n    };\n    mic.start();\n  };\n  const stopRecording = () => {\n    mic.stop();\n  };\n  const onStop = async (recordedBlob) => {\n    let blob = await fetch(recordedBlob.blobURL).then((r) => r.blob());\n\n    setRecordedBlobData(recordedBlob);\n    // var blobUrl = URL.createObjectURL(blob);\n\n    // var xhr = new XMLHttpRequest();\n    // xhr.responseType = \"blob\";\n\n    // xhr.onload = function () {\n    //   var recoveredBlob = xhr.response;\n\n    //   var reader = new FileReader();\n\n    //   reader.onload = function () {\n    //     var blobAsDataUrl = reader.result;\n    //   };\n\n    //   reader.readAsDataURL(recoveredBlob);\n    // };\n\n    // xhr.open(\"GET\", blobUrl);\n    // xhr.send();\n    setBlobURL(blob);\n    let startTime = recordedBlob.startTime;\n    let stopTime = recordedBlob.stopTime;\n    let dd = (stopTime - startTime) / 1000;\n    setLengthOfAudio(Math.round(dd));\n  };\n  return (\n    <div className=\"button-container\">\n      <button className=\"button\" onClick={startRecording}>\n        Start Listening\n      </button>\n      <button className=\"button\" onClick={stopRecording}>\n        Stop Listening\n      </button>\n      <p>{transcript}</p>\n      <div className=\"read-aloud-question\">\n        <div\n          className=\"answer-main-wrap\"\n          style={\n            userDetails.type === \"custom\"\n              ? { height: \"180px\" }\n              : { height: \"150px\" }\n          }\n        >\n          <>\n            <div className=\"cards-body\">\n              <p>\n                Current Status: <span>Answer {statusAction}.</span>\n              </p>\n              <div className=\"progrss-bar-mic-pm\">\n                {userDetails.type === \"custom\" && (\n                  <div className=\"mic-icon-main\">\n                    {\" \"}\n                    <FaMicrophoneAlt className=\"mic-icon\" />\n                  </div>\n                )}\n\n                <ProgressBar className=\"Progress-bar\" now={audioRecorder} />\n              </div>\n              <div className=\"Recorded-Timer\">\n                {recordedSeconds > 9 ? recordedSeconds : \"0\" + recordedSeconds}{\" \"}\n                Seconds Recorded.\n              </div>\n            </div>\n\n            <ReactMic\n              record={record}\n              className=\"sound-wave\"\n              onStop={onStop}\n              onData={onData}\n              visualSetting=\"frequencyBars\"\n              mimeType=\"audio/ogg\"\n            />\n            {userDetails.type === \"custom\" && (\n           \n               \n              \n                  <Button\n                    className=\"skip-btn\"\n                    variant=\"primary\"\n                    // onClick={() => handleAnswerAnalysis(\"Next\")}\n                  >\n                    <span>Stop</span>\n                  </Button>\n                \n         \n            )}\n          </>\n        </div>\n        {userDetails.type === \"custom\" && timerSecondsForprogress !== 0 ? (\n          <div\n            className=\"progress-bar-pm\"\n            style={{ width: \"100%\", background: \"white\", height: \"5px\" }}\n          >\n            <div\n              style={{\n                width: `${timerSecondsForprogress}%`,\n                background: \"#049b40\",\n                height: \"5px\",\n              }}\n              className={`${\n                timerSecondsForprogress !== 100 && \"transintion-time\"\n              }`}\n            ></div>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"question-container\">\n          <h3>\n            Advertisements are a very powerful medium for any announcement or\n            for any information that reaches the maximum number of people. Types\n            of advertisements are classified and General. Classified\n            advertisements are very much like notices, only the content\n            different and no designs are allowed. It’s short and to the point.\n            Advertisers only mention the main content, contact, address and\n            telephone number to reach the customer.\n          </h3>\n          {/* { questionsData[selectedQautionIndex]?.questions} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}