{"ast":null,"code":"import React,{useState}from\"react\";import\"./style.scss\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";let SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition||window.speechSynthesis;let mic=new SpeechRecognition();mic.continuous=true;mic.interimResults=true;mic.lang=\"en-US\";mic.crossBrowser=true;const SpeechToText=()=>{const[transcript,setTranscript]=useState(\"\");const startRecording=()=>{mic.onresult=event=>{const transcript=Array.from(event.results).map(result=>result[0]).map(result=>result.transcript).join(\"\");setTranscript(transcript);console.log(transcript);};mic.start();};const stopRecording=()=>{mic.stop();};return/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:startRecording,children:\"Start Listening\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:stopRecording,children:\"Stop Listening\"}),/*#__PURE__*/_jsx(\"p\",{className:\"inputbox\",children:transcript})]});};export default SpeechToText;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SpeechRecognition","window","webkitSpeechRecognition","speechSynthesis","mic","continuous","interimResults","lang","crossBrowser","SpeechToText","transcript","setTranscript","startRecording","onresult","event","Array","from","results","map","result","join","console","log","start","stopRecording","stop","className","children","onClick"],"sources":["/Users/himanshipatel/Documents/react-trans/src/SpeechToText/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nlet SpeechRecognition =\n  window.SpeechRecognition ||\n  window.webkitSpeechRecognition ||\n  window.speechSynthesis;\n\nlet mic = new SpeechRecognition();\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = \"en-US\";\nmic.crossBrowser = true;\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState(\"\");\n\n  const startRecording = () => {\n\n    mic.onresult = (event) => {\n      const transcript = Array.from(event.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join(\"\");\n      setTranscript(transcript);\n      console.log(transcript);\n    };\n    mic.start();\n  };\n  const stopRecording = () => {\n    mic.stop();\n  };\n\n  return (\n    <div className=\"button-container\">\n      <button className=\"button\" onClick={startRecording}>\n        Start Listening\n      </button>\n      <button className=\"button\" onClick={stopRecording}>\n        Stop Listening\n      </button>\n      <p className=\"inputbox\">{transcript}</p>\n      {/* <input value={transcript} className=\"inputbox\"/> */}\n     \n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,GAAI,CAAAC,iBAAiB,CACnBC,MAAM,CAACD,iBAAiB,EACxBC,MAAM,CAACC,uBAAuB,EAC9BD,MAAM,CAACE,eAAe,CAExB,GAAI,CAAAC,GAAG,CAAG,GAAI,CAAAJ,iBAAiB,CAAC,CAAC,CAEjCI,GAAG,CAACC,UAAU,CAAG,IAAI,CACrBD,GAAG,CAACE,cAAc,CAAG,IAAI,CACzBF,GAAG,CAACG,IAAI,CAAG,OAAO,CAClBH,GAAG,CAACI,YAAY,CAAG,IAAI,CAEvB,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAiB,cAAc,CAAGA,CAAA,GAAM,CAE3BR,GAAG,CAACS,QAAQ,CAAIC,KAAK,EAAK,CACxB,KAAM,CAAAJ,UAAU,CAAGK,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,CACzCC,GAAG,CAAEC,MAAM,EAAKA,MAAM,CAAC,CAAC,CAAC,CAAC,CAC1BD,GAAG,CAAEC,MAAM,EAAKA,MAAM,CAACT,UAAU,CAAC,CAClCU,IAAI,CAAC,EAAE,CAAC,CACXT,aAAa,CAACD,UAAU,CAAC,CACzBW,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC,CACzB,CAAC,CACDN,GAAG,CAACmB,KAAK,CAAC,CAAC,CACb,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1BpB,GAAG,CAACqB,IAAI,CAAC,CAAC,CACZ,CAAC,CAED,mBACE1B,KAAA,QAAK2B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9B,IAAA,WAAQ6B,SAAS,CAAC,QAAQ,CAACE,OAAO,CAAEhB,cAAe,CAAAe,QAAA,CAAC,iBAEpD,CAAQ,CAAC,cACT9B,IAAA,WAAQ6B,SAAS,CAAC,QAAQ,CAACE,OAAO,CAAEJ,aAAc,CAAAG,QAAA,CAAC,gBAEnD,CAAQ,CAAC,cACT9B,IAAA,MAAG6B,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEjB,UAAU,CAAI,CAAC,EAGrC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}