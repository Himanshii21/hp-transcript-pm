{"ast":null,"code":"var _jsxFileName = \"/Users/himanshipatel/Documents/react-trans/src/SpeechToText/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition || window.speechSynthesis;\nlet audioToText = [];\nlet mic = new SpeechRecognition();\nlet textAnswer = \"\";\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = \"en-US\";\nmic.crossBrowser = true;\nconst SpeechToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [isListening, setIsListening] = React.useState(false);\n  React.useEffect(() => {\n    handleListen();\n  }, [isListening]);\n  const startRecording = () => {\n    // mic.onresult = (event) => {\n    //   const speechToText = event.results[0][0].transcript;\n    //   setTranscript(speechToText);\n    // };\n    mic.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join(\"\");\n      setTranscript(transcript);\n      console.log(transcript);\n    };\n    mic.start();\n  };\n  const stopRecording = () => {\n    mic.stop();\n  };\n  const handleListen = () => {\n    if (isListening) {\n      mic.start();\n      mic.onend = () => {\n        mic.start();\n      };\n    } else {\n      mic.stop();\n      mic.onend = () => {\n        setMicOnOffStatus(false);\n      };\n    }\n    mic.onstart = () => {};\n    mic.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join(\"\");\n      textAnswer = transcript;\n      console.log(transcript, \"transcript\");\n      audioToText.push(transcript);\n      if (browserName === \"Edge\") {\n        if (pauseTime >= 2 && countWords(transcript) !== 1 && (findWordBeforeLastDot(transcript).includes(\".\") || findWordBeforeLastDot(transcript).includes(\"?\"))) {\n          const regex = new RegExp(findWordBeforeLastDot(transcript), \"g\");\n          pauseArry.push({\n            time: pauseTime,\n            space: countWords(transcript) - 1,\n            transcript,\n            lastWord: findWordBeforeLastDot(transcript),\n            searchDuplicate: (transcript.match(regex) || []).length\n          });\n          setPauseArry(pauseArry);\n        }\n      } else {\n        if (pauseTime >= 2 && countWords(transcript) !== 1) {\n          pauseArry.push({\n            time: pauseTime,\n            space: countWords(transcript) - 1,\n            transcript\n          });\n          setPauseArry(pauseArry);\n        }\n      }\n      pauseTime = 0;\n      getTimeWitht = {\n        timerSeconds: 40 - decreaseValue,\n        transcript: transcript\n      };\n      mic.onerror = event => {\n        let audioToTextString = audioToText && audioToText.join(\" \");\n      };\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"mcKdnKYcBWrb0l8ooLvPO3JyjNo=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SpeechRecognition","window","webkitSpeechRecognition","speechSynthesis","audioToText","mic","textAnswer","continuous","interimResults","lang","crossBrowser","SpeechToText","_s","transcript","setTranscript","isListening","setIsListening","useEffect","handleListen","startRecording","onresult","event","Array","from","results","map","result","join","console","log","start","stopRecording","stop","onend","setMicOnOffStatus","onstart","push","browserName","pauseTime","countWords","findWordBeforeLastDot","includes","regex","RegExp","pauseArry","time","space","lastWord","searchDuplicate","match","length","setPauseArry","getTimeWitht","timerSeconds","decreaseValue","onerror","audioToTextString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/himanshipatel/Documents/react-trans/src/SpeechToText/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nlet SpeechRecognition =\n  window.SpeechRecognition ||\n  window.webkitSpeechRecognition ||\n  window.speechSynthesis;\n  let audioToText = [];\nlet mic = new SpeechRecognition();\nlet textAnswer = \"\";\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = \"en-US\";\nmic.crossBrowser = true;\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState(\"\");\n  const [isListening, setIsListening] = React.useState(false);\n\n  React.useEffect(() => {\n    handleListen();\n  }, [isListening]);\n\n  const startRecording = () => {\n    // mic.onresult = (event) => {\n    //   const speechToText = event.results[0][0].transcript;\n    //   setTranscript(speechToText);\n    // };\n    mic.onresult = (event) => {\n      const transcript = Array.from(event.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join(\"\");\n      setTranscript(transcript);\n      console.log(transcript);\n    };\n    mic.start();\n  };\n  const stopRecording = () => {\n    mic.stop();\n  };\n  const handleListen = () => {\n    if (isListening) {\n      mic.start();\n      mic.onend = () => {\n        mic.start();\n      };\n    } else {\n      mic.stop();\n      mic.onend = () => {\n        setMicOnOffStatus(false);\n      };\n    }\n    mic.onstart = () => {};\n    mic.onresult = (event) => {\n      const transcript = Array.from(event.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join(\"\");\n\n      textAnswer = transcript;\n      console.log(transcript, \"transcript\");\n\n      audioToText.push(transcript);\n      if (browserName === \"Edge\") {\n        if (\n          pauseTime >= 2 &&\n          countWords(transcript) !== 1 &&\n          (findWordBeforeLastDot(transcript).includes(\".\") ||\n            findWordBeforeLastDot(transcript).includes(\"?\"))\n        ) {\n          const regex = new RegExp(findWordBeforeLastDot(transcript), \"g\");\n          pauseArry.push({\n            time: pauseTime,\n            space: countWords(transcript) - 1,\n            transcript,\n            lastWord: findWordBeforeLastDot(transcript),\n            searchDuplicate: (transcript.match(regex) || []).length,\n          });\n          setPauseArry(pauseArry);\n        }\n      } else {\n        if (pauseTime >= 2 && countWords(transcript) !== 1) {\n          pauseArry.push({\n            time: pauseTime,\n            space: countWords(transcript) - 1,\n            transcript,\n          });\n          setPauseArry(pauseArry);\n        }\n      }\n\n      pauseTime = 0;\n\n      getTimeWitht = {\n        timerSeconds: 40 - decreaseValue,\n        transcript: transcript,\n      };\n      mic.onerror = (event) => {\n        let audioToTextString = audioToText && audioToText.join(\" \");\n      };\n    };\n  };\n\n  return (\n    <div className=\"button-container\">\n      {/* <button className=\"button\" onClick={startRecording}>\n        Start Listening\n      </button>\n      <button className=\"button\" onClick={stopRecording}>\n        Stop Listening\n      </button> */}\n      <p>{transcript}</p>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}